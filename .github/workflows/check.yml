name: check
on:
  push:
    branches:
      - '**'
env:
  PROJECT_NAME: 2p-kt
  WORKFLOW: check
jobs:
  check-style:
    runs-on: ubuntu-latest
    name: Check Code Style
    steps:
      - name: Checkout
        uses: DanySK/action-checkout@0.2.1

      - name: Check Code Style
        uses: gciatto/build-check-deploy-gradle-action@2.0.0
        with:
          build-command: true
          check-command: gradle ktlintCheck
          gradle-termination-command: gradle --stop

  test-jvm:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        java-version:
          - 11
          - 16
          - 17
        jdk-dist:
          - adopt-hotspot
          - temurin
#          - adopt-openj9
#              - zulu
    runs-on: ${{ matrix.os }}
    name: Run tests via ${{ matrix.jdk-dist }} JDK v${{ matrix.java-version }}, on ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.1

      - name: Build and test
        uses: gciatto/build-check-deploy-gradle-action@2.0.0
        with:
          java-distribution: ${{ matrix.jdk-dist }}
          java-version: ${{ matrix.java-version }}
          build-command: gradle jvmMainClasses jvmTestClasses
          check-command: gradle jvmTest
          gradle-termination-command: gradle --stop

  test-js:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        node-version:
          - '14.18.3'
          - '16.13.2'
        java-version: [ 17 ]
        jdk-dist: [ adopt-hotspot ]
    runs-on: ${{ matrix.os }}
    name: Run tests via NodeJS ${{ matrix.node-version }}, on ${{ matrix.os }}
    env:
      ORG_GRADLE_PROJECT_nodeVersion: ${{ matrix.node-version }}
    steps:
      - name: Checkout
        uses: danysk/action-checkout@0.2.1

      - name: Build and test
        uses: gciatto/build-check-deploy-gradle-action@2.0.0
        with:
          java-distribution: ${{ matrix.jdk-dist }}
          java-version: ${{ matrix.java-version }}
          pre-build-command: gradle kotlinNodeJsSetup kotlinNpmInstall
          build-command: gradle jsMainClasses jsTestClasses
          check-command: gradle jsTest
          clean-command: gradle cleanTest
          gradle-termination-command: gradle --stop
