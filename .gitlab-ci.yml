image: pikalab/ci:jdk-gradle-git-graphviz

variables:
  GOPTS: "--no-daemon --console=plain"
  CI: "true"
  BEFORE_TASK: ""
  AFTER_TASK: ""
  GCMD: "gradle"
  CLEAN_TASK: "clean"
  BUILD_TASK: "assemble --parallel"
  CHECK_CODE_TASK: "ktlintCheck --parallel"
  TEST_TASK: "check -x dokkaHtml"
  TEST_JVM_TASK: "jvmTest -x dokkaHtml"
  TEST_JS_TASK: "clean jsTest -x dokkaHtml"
  DOC_TASK: "dokkaHtml --parallel"
  SIGN_TASK: "signAllPublications --parallel"
  BINTRAY_TASK: "publishAllToBintray --parallel"
  CENTRAL_TASK_S01: "publishAllPublicationsToMavenRepository"
  CENTRAL_TASK: "publishAllPublicationsToSonatype"
  JS_COMPILE_TASK: "clean jsMain"
  NPM_PUBLISH_TASK: "npmPublish"
  GITHUB_PUBLISH_TASK: "githubRelease"
  PAGES_TASK: "orchidBuild"
  ORG_GRADLE_PROJECT_orchidBaseUrl: "https://pika-lab.gitlab.io/tuprolog/2p-in-kotlin/"

cache:
  paths:
    - $HOME/.gradle/
    - $HOME/.m2/
    - gradle/
    - .gradle/
    - build/
    - '**/build/'
    - core/src/commonMain/kotlin/it/unibo/tuprolog/Info.kt

stages:
  - check
  - build
  - test
  #  - doc
  #  - sign
  - deploy

Check Code Style:
  stage: check
  script:
    - $GCMD $BEFORE_TASK $CHECK_CODE_TASK $AFTER_TASK $GOPTS
  artifacts:
    paths:
      - "**/build/reports/ktlint/"
  only:
    - branches
  #  needs: []

Compile:
  stage: build
  script:
    - $GCMD $BEFORE_TASK $CLEAN_TASK $AFTER_TASK $GOPTS
    - $GCMD $BEFORE_TASK $BUILD_TASK $AFTER_TASK $GOPTS
  only:
    - branches
#  needs:
#    - job: Check Code Style

Test JVM:
  stage: test
  script: $GCMD $BEFORE_TASK $TEST_JVM_TASK $AFTER_TASK $GOPTS
  artifacts:
    reports:
      junit: "**/build/test-results/jvmTest/*.xml"
  only:
    - branches
#  needs:
#    - job: Compile

Test JS:
  stage: test
  script: $GCMD $BEFORE_TASK $TEST_JS_TASK $AFTER_TASK $GOPTS
  only:
    - branches
#  needs:
#    - job: Compile

Generate Doc:
  #  stage: doc
  stage: deploy
  script:
    - $GCMD $BEFORE_TASK $DOC_TASK $AFTER_TASK $GOPTS
  only:
    - /^(master)|(release)|(develop)$/
  when: manual
#  needs:
#    - job: Test JVM
#    - job: Test JS

Sign Artefacts:
  #  stage: doc
  stage: deploy
  script:
    - $GCMD $BEFORE_TASK $SIGN_TASK $AFTER_TASK $GOPTS
  only:
    - /^(master)|(release)|(develop)$/
  when: manual
#  needs:
#    - job: Generate Doc

Deploy to Bintray:
  stage: deploy
  script:
    - $GCMD $BEFORE_TASK $BINTRAY_TASK $AFTER_TASK $GOPTS
  environment:
    name: Bintray
    url: "https://bintray.com/pika-lab/tuprolog"
  only:
    - /^(master)|(release)|(develop)$/
  when: manual
#  needs:
#    - job: Sign Artefacts

Deploy to Maven Central (S01):
  stage: deploy
  script:
    - $GCMD $BEFORE_TASK $CENTRAL_TASK_S01 $AFTER_TASK $GOPTS
  environment:
    name: Maven Central
    url: "https://oss.sonatype.org"
  only:
    - /^(master)|(release)$/
  when: manual
#  needs:
#    - job: Sign Artefacts

Deploy to Maven Central:
  stage: deploy
  script:
    - $GCMD $BEFORE_TASK $CENTRAL_TASK $AFTER_TASK $GOPTS
  environment:
    name: Maven Central
    url: "https://oss.sonatype.org"
  only:
    - /^(master)|(release)$/
  when: manual
#  needs:
#    - job: Sign Artefacts

Deploy to NPM:
  stage: deploy
  script:
    - $GCMD $BEFORE_TASK $JS_COMPILE_TASK $AFTER_TASK $GOPTS
    - $GCMD $BEFORE_TASK $NPM_PUBLISH_TASK $AFTER_TASK $GOPTS
  environment:
    name: NPM
    url: "https://www.npmjs.com/org/tuprolog"
  only:
    - /^(master)|(release)|(develop)$/
  when: manual
#  needs:
#    - job: Sign Artefacts

Deploy to GitHub:
  stage: deploy
  script:
    - $GCMD $BEFORE_TASK $GITHUB_PUBLISH_TASK $AFTER_TASK $GOPTS
  environment:
    name: GitHub
    url: "https://github.com/tuProlog/2p-kt/releases"
  only:
    - /^(master)|(release)|(develop)$/
  when: manual
#  needs:
#    - job: Sign Artefacts

pages:
  script:
    - mkdir public
    - $GCMD $BEFORE_TASK $PAGES_TASK $AFTER_TASK $GOPTS
    - cp -r documentation/build/docs/orchid/* public
  artifacts:
    paths:
      - public
  #  allow_failure: true
  only:
    - /^(master)|(release)|(documentation)$/
